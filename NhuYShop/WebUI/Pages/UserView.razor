@page "/userview"
<h3>Danh sách CTV</h3>
@using System.Globalization
@inject IToastService toastService
@inject NhuYShop.Model.UserModel model
<style>
    @@media only screen and (max-width: 1024px) {
        #exportonlydesktop {
            cursor: not-allowed;
            pointer-events: none;
            /*Button disabled - CSS color class*/
            color: #c0c0c0;
            background-color: #ffffff;
        }
    }
</style>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-8 col-md-9">
                <NavLink href="adduser">
                    <button class="btn btn-primary">Thêm CTV</button>
                </NavLink>
                <button class="btn btn-success" @onclick="BtnAllOrder">Tất cả</button>
                <button class="btn btn-success" id="exportonlydesktop" @onclick="BtnExportAllOrder">Xuất Excel</button>

            </div>
            <div class="col-4 col-md-3">
                <input type="month" class="form-control" min="2021-01" @oninput="OnChangeDate" value="@datepick.ToString("yyyy-MM")">
            </div>
        </div>
        <div class="row">
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th class="text-center">Mã CTV</th>
                            <th class="text-center">Tên</th>
                            <th class="text-center">SĐT</th>
                            <th class="text-center">Tổng số đơn</th>
                            <th class="text-right">Giá trị đơn</th>
                            <th class="text-right">Giá trị sau ship</th>
                            <th class="text-right">Hoa hồng</th>
                            <th class="text-center">Ngày tạo</th>
                            <th class="text-center">Chỉnh sửa</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in users)
                        {
                            <tr>
                                <td class="text-center">
                                    <button class="btn btn-link" @onclick="@(() => OpenModal(item.ID))">@item.ID</button>
                                </td>
                                <td class="text-center">@item.NAME</td>
                                <td class="text-center">@item.PHONE</td>
                                <td class="text-center">@item.COUNTORDER</td>
                                <td class="text-right">@item.VALUEORDER.ToString("#,###")</td>
                                <td class="text-right">@item.REALVALUEORDER.ToString("#,###")</td>
                                <td class="text-right">@item.COMISSION.ToString("#,###")</td>
                                <td class="text-center">@item.CREATEDATE</td>
                                <td class="text-center">
                                    <button class="btn btn-warning" @onclick="@(() => BtnDelUser(item.ID))">Xóa</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <thead>
                        <tr class="table-success">
                            <th class="text-center" colspan="3">Tổng cộng:</th>
                            <th class="text-center">@totalOrders</th>
                            <th class="text-right">@valueOrders.ToString("#,###")</th>
                            <th class="text-right">@realValueOrders.ToString("#,###")</th>
                            <th class="text-right">@comissionOrders.ToString("#,###")</th>
                            <th class="text-center" colspan="2">Tổng doanh thu: @((realValueOrders - comissionOrders).ToString("#,###"))</th>
                        </tr>
                    </thead>
                </table>
            </div>

        </div>
    </div>
    <div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
        @if (ordersCTV != null)
        {
            <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">CTV: @ordersCTV.Select(x => x.CREATEUSER).FirstOrDefault()</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="CloseModal">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="table-responsive">
                            @if (ordersCTV.Count == 0)
                            {
                                <div class="text-center">
                                    <p><em>Empty...</em></p>
                                </div>
                            }
                            else
                            {
                                <div style="overflow: scroll; height: 500px;">
                                    <table class="table table-bordered">
                                        <thead>
                                            <tr>
                                                <th class="text-center">Trạng thái</th>
                                                <th class="text-center">ID</th>
                                                @*<th class="text-center">Tên KH</th>
                                                    <th class="text-center">Số ĐT</th>
                                                    <th class="text-center">Địa chỉ</th>*@
                                                <th class="text-center">Chi tiết</th>
                                                <th class="text-center">Tổng tiền</th>
                                                <th class="text-center">Hoa hồng</th>
                                                <th class="text-center">Freeship?</th>
                                                @*<th class="text-center">Ngày tạo</th>*@
                                                @*<th class="text-center">Chỉnh sửa</th>*@
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in ordersCTV)
                                            {
                                                <tr>
                                                    @if (item.is_completed && item.orther_type.Contains("Thu hộ"))
                                                    {
                                                        <td class="text-center">
                                                            <button class="btn btn-info" disabled>Thu hộ</button>
                                                        </td>
                                                    }
                                                    else if (item.is_completed && item.orther_type.Contains("Chuyển"))
                                                    {
                                                        <td class="text-center">
                                                            <button class="btn btn-danger" disabled>Chuyển</button>
                                                        </td>
                                                    }
                                                    else if (item.is_completed && item.orther_type.Contains("Tiền mặt"))
                                                    {
                                                        <td class="text-center">
                                                            <button class="btn btn-success" disabled>Tiền mặt</button>
                                                        </td>
                                                    }
                                                    else if (item.is_completed)
                                                    {
                                                        <td class="text-center">
                                                            <button class="btn btn-dark" disabled>Đã đăng</button>
                                                        </td>
                                                    }
                                                    else if (!item.is_completed)
                                                    {
                                                        <td class="text-center">
                                                            <button class="btn btn-warning" disabled>Chưa Đăng</button>
                                                        </td>
                                                    }
                                                    <td class="text-center">@item.ID</td>
                                                    @*<td>@item.customer_name</td>
                                                        <td class="text-center">@item.customer_tel</td>
                                                        <td>@item.customer_address</td>*@
                                                    <td>@item.detail</td>
                                                    <td class="text-center">@item.value.ToString("#,###")</td>
                                                    <td class="text-center">
                                                        @*@item.commission.ToString("#,###")*@
                                                        <input type="number" @bind-value="item.commission" />
                                                    </td>
                                                    <td class="text-center">
                                                        @(item.is_freeship ? "Có" : "Không")
                                                    </td>
                                                    @*<td>@item.CREATEDATE</td>*@
                                                    @*<td class="text-center">
                                                            <NavLink href="@item.ID">
                                                                <button class="btn btn-info">Sửa</button>
                                                            </NavLink>
                                                        </td>*@
                                                </tr>
                                            }
                                        </tbody>
                                    </table>

                                </div>

                            }
                        </div>

                    </div>
                    <div class="modal-footer">
                        @if (isDisabled)
                        {
                            <span class="text-left">Hoàn thành: <b style="color:red;">@count/@ordersCTV.Count</b></span>
                        }
                        <button type="button" class="btn btn-primary" @onclick="ComfirmOrders" disabled="@isDisabled">Xác nhận</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="CloseModal">Đóng</button>
                    </div>
                </div>
            </div>

        }
    </div>
</div>
<BlazoredToasts Position="ToastPosition.TopRight"
                Timeout="2"
                IconType="IconType.FontAwesome"
                SuccessClass="success-toast-override"
                SuccessIcon="fa fa-thumbs-up"
                ErrorIcon="fa fa-bug" />
@code {
    #region Modal
    public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;
    public List<OrderModel> ordersCTV { get; set; }
    public bool isDisabled = false;
    public int count { get; set; }

    public void OpenModal(string CIVID)
    {
        ordersCTV = new List<OrderModel>();
        ordersCTV = orders.Where(x => x.CREATEUSER == CIVID).ToList();
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void CloseModal()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
    public async void ComfirmOrders()
    {
        if (ordersCTV != null)
        {
            isDisabled = true;
            count = 0;
            string ctv = ordersCTV.Select(x => x.CREATEUSER).FirstOrDefault();
            foreach (var item in ordersCTV)
            {
                await orderDAO.UpdateOrder(item);
                count++;
                StateHasChanged();
            }
            foreach (var master in users)
            {
                master.VALUEORDER = 0;
                master.COUNTORDER = 0;
                master.COMISSION = 0;
            }

            foreach (var master in users)
            {
                foreach (var item in orders)
                {
                    if (master.ID == item.CREATEUSER)
                    {
                        master.VALUEORDER += item.value;
                        master.COUNTORDER += 1;
                        master.COMISSION += item.commission;

                        if (item.is_freeship)
                        {
                            master.REALVALUEORDER += (item.value - item.feeship);
                        }
                        else if (!item.is_freeship)
                        {
                            master.REALVALUEORDER += item.value;
                        }
                    }
                }
            }
            totalOrders = users.Sum(x => x.COUNTORDER);
            valueOrders = users.Sum(x => x.VALUEORDER);
            realValueOrders = users.Sum(x => x.REALVALUEORDER);
            comissionOrders = users.Sum(x => x.COMISSION);
            isDisabled = false;
            StateHasChanged();
            CloseModal();
            toastService.ShowSuccess("Cập nhật tiền hoa hồng cho CTV:" + ctv + " thành công");
        }
        else
        {
            toastService.ShowError("Không có đơn hàng nào để xác nhận!");
        }

    }
    #endregion


    private UserDAO userDAO = new UserDAO();
    private OrderDAO orderDAO = new OrderDAO();
    private List<OrderModel> orders = new List<OrderModel>();
    private List<UserModel> users = new List<UserModel>();
    DateTime datepick = DateTime.Now;
    protected override async Task OnInitializedAsync()
    {
        users = await userDAO.GetAllUser();
        orders = await orderDAO.GetAllOrder(datepick);
        foreach (var master in users)
        {
            foreach (var item in orders)
            {
                if (master.ID == item.CREATEUSER)
                {
                    master.VALUEORDER += item.value;
                    master.COUNTORDER += 1;
                    master.COMISSION += item.commission;

                    if (item.is_freeship)
                    {
                        master.REALVALUEORDER += (item.value - item.feeship);
                    }
                    else if (!item.is_freeship)
                    {
                        master.REALVALUEORDER += item.value;
                    }
                }
            }
        }
        totalOrders = users.Sum(x => x.COUNTORDER);
        valueOrders = users.Sum(x => x.VALUEORDER);
        comissionOrders = users.Sum(x => x.COMISSION);
        realValueOrders = users.Sum(x => x.REALVALUEORDER);
    }

    int totalOrders = 0;
    int valueOrders = 0;
    int comissionOrders = 0;
    int realValueOrders = 0;
    public async void BtnAllOrder()
    {
        orders = await orderDAO.GetAllOrder();
        foreach (var master in users)
        {
            master.VALUEORDER = 0;
            master.COUNTORDER = 0;
            master.COMISSION = 0;
            master.REALVALUEORDER = 0;
            foreach (var item in orders)
            {
                if (master.ID == item.CREATEUSER)
                {
                    master.VALUEORDER += item.value;
                    master.COUNTORDER += 1;
                    master.COMISSION += item.commission;

                    if (item.is_freeship)
                    {
                        master.REALVALUEORDER += (item.value - item.feeship);
                    }
                    else if (!item.is_freeship)
                    {
                        master.REALVALUEORDER += item.value;
                    }
                }
            }
        }
        totalOrders = users.Sum(x => x.COUNTORDER);
        valueOrders = users.Sum(x => x.VALUEORDER);
        realValueOrders = users.Sum(x => x.REALVALUEORDER);
        comissionOrders = users.Sum(x => x.COMISSION);
        StateHasChanged();
        toastService.ShowSuccess("Lấy tất cả đơn hàng thành công!");
    }
    public void BtnExportAllOrder()
    {
        try
        {
            orderDAO.OrderExportExcelAsync(orders, datepick.ToString("yyyy - MM") + ".xlsx", datepick);
            toastService.ShowSuccess("Xuất excel các đơn tháng: " + datepick.ToString("MM/yyyy") + " ra ngoài Desktop thành công.");
        }
        catch (Exception)
        {
            toastService.ShowError("Có lỗi xảy ra");
            throw;
        }
    }

    public async void OnChangeDate(ChangeEventArgs e)
    {
        datepick = DateTime.ParseExact(e.Value.ToString(), "yyyy-MM", CultureInfo.InvariantCulture);
        orders = await orderDAO.GetAllOrder(datepick);

        foreach (var master in users)
        {
            master.VALUEORDER = 0;
            master.COUNTORDER = 0;
            master.COMISSION = 0;
            master.REALVALUEORDER = 0;
            foreach (var item in orders)
            {
                if (master.ID == item.CREATEUSER)
                {
                    master.VALUEORDER += item.value;
                    master.COUNTORDER += 1;
                    master.COMISSION += item.commission;

                    if (item.is_freeship)
                    {
                        master.REALVALUEORDER += (item.value - item.feeship);
                    }
                    else if (!item.is_freeship)
                    {
                        master.REALVALUEORDER += item.value;
                    }
                }
            }
        }
        totalOrders = users.Sum(x => x.COUNTORDER);
        valueOrders = users.Sum(x => x.VALUEORDER);
        realValueOrders = users.Sum(x => x.REALVALUEORDER);
        comissionOrders = users.Sum(x => x.COMISSION);
        StateHasChanged();
        toastService.ShowSuccess("Lấy các đơn hàng tháng " + datepick.ToString("MM/yyyy") + " thành công!");
    }

    public async void BtnDelUser(string ID)
    {
        if (await userDAO.DeleteUser(ID) == "success")
        {
            toastService.ShowSuccess("Xóa CTV: " + ID + ". thành công!");
            users = await userDAO.GetAllUser();
            StateHasChanged();
        }
    }

}
